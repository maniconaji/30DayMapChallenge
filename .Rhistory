),
# by pasting the factors together as numbers we match the groups defined
# in the tibble bivariate_color_scale
group = paste(
as.numeric(T_POB_R_quantiles), "-",
as.numeric(T_POB_U_quantiles)
)
) %>%
# we now join the actual hex values per "group"
# so each municipality knows its hex value based on the his gini and avg
# income value
left_join(bivariate_color_scale, by = "group")
#Plotting map
map <- ggplot(
# use the same dataset as before
data = censo2017
) +
geom_sf(
aes(
fill = fill
),
# use thin white stroke for municipalities
color = "white",
size = 0.1
) +
scale_fill_identity() +
labs(x = NULL,
y = NULL,
title = "Distribución Bivariada de la población rural/urbana",
subtitle = "Región de estudio: Libertador Bernardo O'Higgins",
caption = paste("Autor: Manuel Huerta",
"Projección: WGS84 - World Geodetic System 1984",
"Fuente: Censo 2017, Instituto Nacional de Estadística",
sep="\n")) +
blank() +
north(scale = 0.15, location = "bottomleft",
x.min =  -72.05728, x.max = -70.00921,
y.min = -35.175517, y.max = -33.8507) +
scalebar(dist = 25, dist_unit = "km",
transform = TRUE, model = "WGS84",
x.min =  -72.05728, x.max = -70.00921,
y.min = -35.105517, y.max = -33.8507,
location = "bottomright", height	=0.02, st.size = 2,
border.size = 0.025) +
# add the theme
theme_map() +
theme(
plot.caption = element_text(hjust = 1, size=5.5),
plot.subtitle = element_text(hjust = 0.5, size=7),
plot.title = element_text(hjust = 0.5, size=12.5),
plot.background = element_rect(color="white",
fill = "white")
)
map
# separate the groups
bivariate_color_scale %<>%
separate(group, into = c("T_POB_R", "T_POB_U"), sep = " - ") %>%
mutate(gini = as.integer(T_POB_R),
mean = as.integer(T_POB_U))
legend <- ggplot() +
geom_tile(
data = bivariate_color_scale,
mapping = aes(
x = T_POB_R,
y = T_POB_U,
fill = fill)
) +
scale_fill_identity() +
labs(x = "Rural ⟶️",
y = "Urbana ⟶️") +
theme_map() +
# make font small enough
theme(
axis.title = element_text(size = 6),
axis.title.y = element_text(angle = 90, vjust=1),
) +
# quadratic tiles
coord_fixed()
p <- ggdraw() +
draw_plot(map, 0, 0, 1, 1, valign = 0.5, halign = 0.5) +
draw_plot(legend, 0.325, 0.025, 0.2, 0.2)
p
ggsave(plot=p, filename = "maps/30DayMapChallengeDay14-16.png", dpi=300)
rm(list = ls())
packages <- c(
"rstudioapi", "tidyverse", "lintr", "raster", "viridis",
"cowplot",  "rmarkdown",  'Rcpp',  "units",  "sf", "ggmap", "classInt",
"terra", "spData", "magrittr", "tmap", "ggsn")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x,
lib = "C:/Program Files/R/R-4.1.2/library",
dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
rm(list = ls())
# open files and filter by specific columns
regiones_objetivo <- c(6) %>% as.character()
censo2017 <- read_sf(
"./data/chile/censo2017/Censo_2017_Comuna/censo2017_comuna.shp"
)  %>%
filter(REGION %in% regiones_objetivo) %>%
st_transform(4326) #%>%
# define number of classes
no_classes <- 6
# extract quantiles for T_POB_R and T_POB
quantiles_R <- censo2017 %>%
pull(T_POB_R) %>%
quantile(probs = seq(0, 1, length.out = 4))
quantiles_U <- censo2017 %>%
pull(T_POB_U) %>%
quantile(probs = seq(0, 1, length.out = 4))
# create color scale that encodes two variables
# red for gini and blue for mean income
# the special notation with gather is due to readibility reasons
bivariate_color_scale <- tibble(
"3 - 3" = "#3F2949", # high POB_R, high POB_U
"2 - 3" = "#435786",
"1 - 3" = "#4885C1", # low POB_R, high POB_U
"3 - 2" = "#77324C",
"2 - 2" = "#806A8A", # medium POB_R, medium POB_U
"1 - 2" = "#89A1C8",
"3 - 1" = "#AE3A4E", # high POB_R, low POB_U
"2 - 1" = "#BC7C8F",
"1 - 1" = "#CABED0" # low POB_R, low POB_U
) %>%
gather("group", "fill")
# cut into groups defined above and join fill
censo2017 %<>%
mutate(
T_POB_R_quantiles = cut(
T_POB_R,
breaks = quantiles_R,
include.lowest = TRUE
),
T_POB_U_quantiles = cut(
T_POB_U,
breaks = quantiles_U,
include.lowest = TRUE
),
# by pasting the factors together as numbers we match the groups defined
# in the tibble bivariate_color_scale
group = paste(
as.numeric(T_POB_R_quantiles), "-",
as.numeric(T_POB_U_quantiles)
)
) %>%
# we now join the actual hex values per "group"
# so each municipality knows its hex value based on the his gini and avg
# income value
left_join(bivariate_color_scale, by = "group")
#Plotting map
map <- ggplot(
# use the same dataset as before
data = censo2017
) +
geom_sf(
aes(
fill = fill
),
# use thin white stroke for municipalities
color = "white",
size = 0.1
) +
scale_fill_identity() +
labs(x = NULL,
y = NULL,
title = "Distribución Bivariada de la población rural/urbana",
subtitle = "Región de estudio: Libertador Bernardo O'Higgins",
caption = paste("Autor: Manuel Huerta",
"Projección: WGS84 - World Geodetic System 1984",
"Fuente: Censo 2017, Instituto Nacional de Estadística",
sep="\n")) +
blank() +
north(scale = 0.15, location = "bottomleft",
x.min =  -72.05728, x.max = -70.00921,
y.min = -35.175517, y.max = -33.8507) +
scalebar(dist = 25, dist_unit = "km",
transform = TRUE, model = "WGS84",
x.min =  -72.05728, x.max = -70.00921,
y.min = -35.105517, y.max = -33.8507,
location = "bottomright", height	=0.02, st.size = 2,
border.size = 0.025) +
# add the theme
theme_map() +
theme(
plot.caption = element_text(hjust = 1, size=6),
plot.subtitle = element_text(hjust = 0.5, size=7.5),
plot.title = element_text(hjust = 0.5, size=10),
plot.background = element_rect(color="white",
fill = "white")
)
map
# separate the groups
bivariate_color_scale %<>%
separate(group, into = c("T_POB_R", "T_POB_U"), sep = " - ") %>%
mutate(gini = as.integer(T_POB_R),
mean = as.integer(T_POB_U))
legend <- ggplot() +
geom_tile(
data = bivariate_color_scale,
mapping = aes(
x = T_POB_R,
y = T_POB_U,
fill = fill)
) +
scale_fill_identity() +
labs(x = "Rural ⟶️",
y = "Urbana ⟶️") +
theme_map() +
# make font small enough
theme(
axis.title = element_text(size = 6),
axis.title.y = element_text(angle = 90, vjust=1),
) +
# quadratic tiles
coord_fixed()
p <- ggdraw() +
draw_plot(map, 0, 0, 1, 1, valign = 0.5, halign = 0.5) +
draw_plot(legend, 0.325, 0.025, 0.2, 0.2)
p
ggsave(plot=p, filename = "maps/30DayMapChallengeDay14-16.png", dpi=300)
rm(list = ls())
packages <- c(
"rstudioapi", "tidyverse", "lintr", "raster", "viridis",
"cowplot",  "rmarkdown",  'Rcpp',  "units",  "sf", "ggmap", "classInt",
"terra", "spData", "magrittr", "tmap", "ggsn")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x,
lib = "C:/Program Files/R/R-4.1.2/library",
dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
rm(list = ls())
# open files and filter by specific columns
regiones_objetivo <- c(6) %>% as.character()
censo2017 <- read_sf(
"./data/chile/censo2017/Censo_2017_Comuna/censo2017_comuna.shp"
)  %>%
filter(REGION %in% regiones_objetivo) %>%
st_transform(4326) #%>%
# define number of classes
no_classes <- 6
# extract quantiles for T_POB_R and T_POB
quantiles_R <- censo2017 %>%
pull(T_POB_R) %>%
quantile(probs = seq(0, 1, length.out = 4))
quantiles_U <- censo2017 %>%
pull(T_POB_U) %>%
quantile(probs = seq(0, 1, length.out = 4))
# create color scale that encodes two variables
# red for gini and blue for mean income
# the special notation with gather is due to readibility reasons
bivariate_color_scale <- tibble(
"3 - 3" = "#3F2949", # high POB_R, high POB_U
"2 - 3" = "#435786",
"1 - 3" = "#4885C1", # low POB_R, high POB_U
"3 - 2" = "#77324C",
"2 - 2" = "#806A8A", # medium POB_R, medium POB_U
"1 - 2" = "#89A1C8",
"3 - 1" = "#AE3A4E", # high POB_R, low POB_U
"2 - 1" = "#BC7C8F",
"1 - 1" = "#CABED0" # low POB_R, low POB_U
) %>%
gather("group", "fill")
# cut into groups defined above and join fill
censo2017 %<>%
mutate(
T_POB_R_quantiles = cut(
T_POB_R,
breaks = quantiles_R,
include.lowest = TRUE
),
T_POB_U_quantiles = cut(
T_POB_U,
breaks = quantiles_U,
include.lowest = TRUE
),
# by pasting the factors together as numbers we match the groups defined
# in the tibble bivariate_color_scale
group = paste(
as.numeric(T_POB_R_quantiles), "-",
as.numeric(T_POB_U_quantiles)
)
) %>%
# we now join the actual hex values per "group"
# so each municipality knows its hex value based on the his gini and avg
# income value
left_join(bivariate_color_scale, by = "group")
#Plotting map
map <- ggplot(
# use the same dataset as before
data = censo2017
) +
geom_sf(
aes(
fill = fill
),
# use thin white stroke for municipalities
color = "white",
size = 0.1
) +
scale_fill_identity() +
labs(x = NULL,
y = NULL,
title = "Distribución Bivariada de la población rural/urbana",
subtitle = "Región de estudio: Libertador Bernardo O'Higgins",
caption = paste("Autor: Manuel Huerta",
"Projección: WGS84 - World Geodetic System 1984",
"Fuente: Censo 2017, Instituto Nacional de Estadística",
sep="\n")) +
blank() +
north(scale = 0.15, location = "bottomleft",
x.min =  -72.05728, x.max = -70.00921,
y.min = -35.175517, y.max = -33.8507) +
scalebar(dist = 25, dist_unit = "km",
transform = TRUE, model = "WGS84",
x.min =  -72.05728, x.max = -70.00921,
y.min = -35.105517, y.max = -33.8507,
location = "bottomright", height	=0.02, st.size = 2,
border.size = 0.025) +
# add the theme
theme_map() +
theme(
plot.caption = element_text(hjust = 1, size=6),
plot.subtitle = element_text(hjust = 0.5, size=7.5),
plot.title = element_text(hjust = 0.5, size=10),
plot.background = element_rect(color="white",
fill = "white")
)
map
# separate the groups
bivariate_color_scale %<>%
separate(group, into = c("T_POB_R", "T_POB_U"), sep = " - ") %>%
mutate(gini = as.integer(T_POB_R),
mean = as.integer(T_POB_U))
legend <- ggplot() +
geom_tile(
data = bivariate_color_scale,
mapping = aes(
x = T_POB_R,
y = T_POB_U,
fill = fill)
) +
scale_fill_identity() +
labs(x = "Rural ⟶️",
y = "Urbana ⟶️") +
theme_map() +
# make font small enough
theme(
axis.title = element_text(size = 6),
axis.title.y = element_text(angle = 90, vjust=1),
) +
# quadratic tiles
coord_fixed()
p <- ggdraw() +
draw_plot(map, 0, 0, 1, 1, valign = 0.5, halign = 0.5) +
draw_plot(legend, 0.325, 0.025, 0.2, 0.2)
p
ggsave(plot=p, filename = "maps/30DayMapChallengeDay14-16.png", dpi=300)
rm(list = ls())
packages <- c(
"rstudioapi", "tidyverse", "lintr", "raster", "viridis",
"cowplot",  "rmarkdown",  'Rcpp',  "units",  "sf", "ggmap", "classInt",
"terra", "spData", "magrittr", "tmap", "ggsn")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x,
lib = "C:/Program Files/R/R-4.1.2/library",
dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
rm(list = ls())
# open files and filter by specific columns
regiones_objetivo <- c(6) %>% as.character()
censo2017 <- read_sf(
"./data/chile/censo2017/Censo_2017_Comuna/censo2017_comuna.shp"
)  %>%
filter(REGION %in% regiones_objetivo) %>%
st_transform(4326) #%>%
# define number of classes
no_classes <- 6
# extract quantiles for T_POB_R and T_POB
quantiles_R <- censo2017 %>%
pull(T_POB_R) %>%
quantile(probs = seq(0, 1, length.out = 4))
quantiles_U <- censo2017 %>%
pull(T_POB_U) %>%
quantile(probs = seq(0, 1, length.out = 4))
# create color scale that encodes two variables
# red for gini and blue for mean income
# the special notation with gather is due to readibility reasons
bivariate_color_scale <- tibble(
"3 - 3" = "#3F2949", # high POB_R, high POB_U
"2 - 3" = "#435786",
"1 - 3" = "#4885C1", # low POB_R, high POB_U
"3 - 2" = "#77324C",
"2 - 2" = "#806A8A", # medium POB_R, medium POB_U
"1 - 2" = "#89A1C8",
"3 - 1" = "#AE3A4E", # high POB_R, low POB_U
"2 - 1" = "#BC7C8F",
"1 - 1" = "#CABED0" # low POB_R, low POB_U
) %>%
gather("group", "fill")
# cut into groups defined above and join fill
censo2017 %<>%
mutate(
T_POB_R_quantiles = cut(
T_POB_R,
breaks = quantiles_R,
include.lowest = TRUE
),
T_POB_U_quantiles = cut(
T_POB_U,
breaks = quantiles_U,
include.lowest = TRUE
),
# by pasting the factors together as numbers we match the groups defined
# in the tibble bivariate_color_scale
group = paste(
as.numeric(T_POB_R_quantiles), "-",
as.numeric(T_POB_U_quantiles)
)
) %>%
# we now join the actual hex values per "group"
# so each municipality knows its hex value based on the his gini and avg
# income value
left_join(bivariate_color_scale, by = "group")
#Plotting map
map <- ggplot(
# use the same dataset as before
data = censo2017
) +
geom_sf(
aes(
fill = fill
),
# use thin white stroke for municipalities
color = "white",
size = 0.1
) +
scale_fill_identity() +
labs(x = NULL,
y = NULL,
title = "Distribución Bivariada de la población rural/urbana",
subtitle = "Región de estudio: Libertador Bernardo O'Higgins",
caption = paste("Autor: Manuel Huerta",
"Projección: WGS84 - World Geodetic System 1984",
"Fuente: Censo 2017, Instituto Nacional de Estadística",
sep="\n")) +
blank() +
north(scale = 0.15, location = "bottomleft",
x.min =  -72.05728, x.max = -70.00921,
y.min = -35.175517, y.max = -33.8507) +
scalebar(dist = 25, dist_unit = "km",
transform = TRUE, model = "WGS84",
x.min =  -72.05728, x.max = -70.00921,
y.min = -35.105517, y.max = -33.8507,
location = "bottomright", height	=0.02, st.size = 2,
border.size = 0.025) +
# add the theme
theme_map() +
theme(
plot.caption = element_text(hjust = 1, size=5),
plot.subtitle = element_text(hjust = 0.5, size=7.5),
plot.title = element_text(hjust = 0.5, size=10),
plot.background = element_rect(color="white",
fill = "white")
)
map
# separate the groups
bivariate_color_scale %<>%
separate(group, into = c("T_POB_R", "T_POB_U"), sep = " - ") %>%
mutate(gini = as.integer(T_POB_R),
mean = as.integer(T_POB_U))
legend <- ggplot() +
geom_tile(
data = bivariate_color_scale,
mapping = aes(
x = T_POB_R,
y = T_POB_U,
fill = fill)
) +
scale_fill_identity() +
labs(x = "Rural ⟶️",
y = "Urbana ⟶️") +
theme_map() +
# make font small enough
theme(
axis.title = element_text(size = 6),
axis.title.y = element_text(angle = 90, vjust=1),
) +
# quadratic tiles
coord_fixed()
p <- ggdraw() +
draw_plot(map, 0, 0, 1, 1, valign = 0.5, halign = 0.5) +
draw_plot(legend, 0.325, 0.025, 0.2, 0.2)
p
ggsave(plot=p, filename = "maps/30DayMapChallengeDay14-16.png", dpi=300)
